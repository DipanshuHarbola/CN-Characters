apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "com.dipanshu.cncharactors"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    implementation 'com.google.android.material:material:1.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

/* Dimension Factory For Different width devices */
class DimenFactory extends DefaultTask {

    @Input
    double maxDimen = 800

    @Input
    double refSmallWidth = 600

    @Input
    double minSmallWidth = 600

    @Input
    double maxSmallWidth = 780

    @TaskAction
    def create() {
        String resFolder = project.getProjectDir().getPath() + "/src/main/res/"
        boolean isFirst = true
        for (double dimen = minSmallWidth; dimen <= maxSmallWidth; dimen = dimen + 30) {
            String folder
            if (isFirst) {
                folder = resFolder + "values"
                dimen = refSmallWidth
            } else {
                folder = resFolder + "values-sw" + (int) dimen + "dp"
            }
            String fileName = folder + "/sw.xml"
            new File(folder).mkdir()
            new File(fileName).createNewFile()
            PrintWriter printWriter = new PrintWriter(fileName)
            printWriter.println("<?xml version=\"1.0\" encoding=\"utf-8\"?>")
            printWriter.println("<resources>")
            printWriter.println("\r\n\t<!-- Generated by- Dipanshu Harbola -->")
            printWriter.println("\r\n\t<!-- Positive Dimensions -->")
            printWriter.println("\r\n\t<!-- " + folder + " -->")
            for (int i = 0; i <= maxDimen; i++) {
                double ratio = i / refSmallWidth
                double xDimen = ratio * dimen
                printWriter.printf("\t<dimen name=\"_%dDP\">%f" + "dp" + "</dimen>\r\n", i, xDimen)
            }
            printWriter.println("\r\n\t<!-- Positive Text Dimensions -->")
            for (int i = 1; i <= maxDimen; i++) {
                double ratio = i / refSmallWidth
                double xDimen = ratio * dimen
                printWriter.printf("\t<dimen name=\"_%dSP\">%f" + "sp" + "</dimen>\r\n", i, xDimen)
            }
            printWriter.println("</resources>")
            printWriter.close()
            if (isFirst) {
                dimen = minSmallWidth - 30
                isFirst = false
            }
        }
    }
}

task createDimensions(type: DimenFactory) {
    maxDimen = 300 // Dimensions till count
    refSmallWidth = 600 //Reference Small width Screen

    minSmallWidth = 600 // Minimum Small width
    maxSmallWidth = 780 // Max Small width
}

/* Enable once small width values are not generated */
preBuild.dependsOn createDimensions
